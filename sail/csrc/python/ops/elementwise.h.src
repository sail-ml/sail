#pragma once

#include <Python.h>
#include <structmember.h>
#include <chrono>
#include <iostream>
#include "../../src/Tensor.h"
#include "../../src/dtypes.h"
#include "../../src/ops/elementwise.h"
#include "../../src/factories.h"
#include "../py_tensor/py_tensor.h"
#include "numpy/arrayobject.h"

#include "../macros.h"


/** begin block
 * name = [add, sub, mul, div]
 * op = [+, -, *, /]
 */

RETURN_OBJECT ops_$name$(PyObject* self, PyObject* args) {
    PyObject* t1;
    PyObject* t2;

    sail::Tensor tensor1;
    sail::Tensor tensor2;

    if (!PyArg_ParseTuple(args, "OO", &t1, &t2)) {
        PyErr_SetString(PyExc_TypeError, "Inputs should be Sail Tensors");
        return NULL;
    }

    NUMERIC_PROCESS(t1, t2);

    PyTensor* ret_class;
    ret_class = (PyTensor*)PyTensorType.tp_alloc(&PyTensorType, 0);

    ret_class->tensor = tensor1 $op$ tensor2;

    ret_class->ndim = ret_class->tensor.storage.ndim;
    ret_class->dtype = ((PyTensor*)t1)->dtype;

    return (PyObject*)ret_class;
}

/** end block **/
